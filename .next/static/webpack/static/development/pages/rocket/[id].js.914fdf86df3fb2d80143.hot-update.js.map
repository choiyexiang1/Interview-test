{"version":3,"file":"static/webpack/static\\development\\pages\\rocket\\[id].js.914fdf86df3fb2d80143.hot-update.js","sources":["webpack:///./pages/rocket/.js"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport { useRouter } from 'next/router'\r\nimport gql from \"graphql-tag\";\r\nimport Head from 'next/head';\r\n\r\nimport Layout, { client } from '../../components/Layout';\r\nimport Loader from '../../components/Loader';\r\n\r\nconst Rocket = () => {\r\n\r\n    const [rocket, setRocket] = useState({})\r\n    const [histories, setHistories] = useState([])\r\n    const [isLoading, setIsLoading] = useState(true)\r\n\r\n    // https://github.com/zeit/next.js/issues/8259\r\n    const [id, setId] = useState(null)\r\n    const { query } = useRouter()\r\n\r\n    useEffect(() => {\r\n        setId(query.id)\r\n\r\n        if (id) {\r\n            client\r\n                .query({\r\n                    query: gql`\r\n                        query GET_ROCKET {\r\n                            histories {\r\n                                title\r\n                                details\r\n                                event_date_utc\r\n                                flight {\r\n                                  rocket {\r\n                                    rocket {\r\n                                      id\r\n                                    }\r\n                                  }\r\n                                }\r\n                              }\r\n                              rocket(id: \"${id}\") {\r\n                                id\r\n                                name\r\n                                description\r\n                                country\r\n                                diameter {\r\n                                  feet\r\n                                  meters\r\n                                }\r\n                                height {\r\n                                  feet\r\n                                  meters\r\n                                }\r\n                                mass {\r\n                                  kg\r\n                                  lb\r\n                                }\r\n                                payload_weights {\r\n                                  kg\r\n                                  lb\r\n                                  name\r\n                                }\r\n                                first_stage {\r\n                                  burn_time_sec\r\n                                  engines\r\n                                  fuel_amount_tons\r\n                                  thrust_vacuum {\r\n                                    kN\r\n                                    lbf\r\n                                  }\r\n                                  thrust_sea_level {\r\n                                    kN\r\n                                    lbf\r\n                                  }\r\n                                }\r\n                                second_stage {\r\n                                  burn_time_sec\r\n                                  engines\r\n                                  thrust {\r\n                                    kN\r\n                                    lbf\r\n                                  }\r\n                                }\r\n                                wikipedia\r\n                                stages\r\n                              }\r\n                        }\r\n                    `\r\n                })\r\n                .then(result => {\r\n                    // console.log(result)\r\n                    setRocket(result.data.rocket)\r\n                    setIsLoading(false)\r\n                    setHistories(result.data.histories)\r\n                });\r\n        }\r\n    }, [query, id])\r\n\r\n    // Filter out histories don't have flight\r\n    const filterHistory = histories.filter(function (history) {\r\n        return (history.flight)\r\n    });\r\n    // console.log(filterHistory)\r\n\r\n    // Filter out id not same with this page\r\n    const rocketHistory = filterHistory.filter(function (history) {\r\n        return (history.flight.rocket.rocket.id == `${id}`)\r\n    });\r\n    // console.log(rocketHistory)\r\n\r\n    const number = x =>{\r\n        return x.toLocaleString();\r\n      }\r\n      \r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            {isLoading ?\r\n                //isLoading (true)--------------------------------------------------------------------------------------------\r\n                <Layout>\r\n                    <div style={{ backgroundColor: 'black', opacity: 0.8, height: '92vh' }}>\r\n                        <Loader />\r\n                    </div>\r\n                </Layout>\r\n                :\r\n                //isLoading (false)--------------------------------------------------------------------------------------------\r\n                <Layout>\r\n                    <Head>\r\n                        <title>{rocket.name} | SpaceX</title>\r\n                    </Head>\r\n                    <p>RocketName: {rocket.name}</p>\r\n                    <p>RocketDescription: {rocket.description}</p>\r\n                    <p>RocketCountry: {rocket.country}</p>\r\n                    <p>RocketWikipedia: {rocket.wikipedia}</p>\r\n                    <p>RocketStage: {rocket.stages}</p>\r\n                    <br/>\r\n                    <p>RocketDiameter: </p>\r\n                    <p>Feet:{rocket.diameter.feet}</p>\r\n                    <p>Meters:{number(`${rocket.diameter.meters}`)}</p>\r\n                    <br/>\r\n                    <p>RocketHeight: </p>\r\n                    <p>Feet:{rocket.height.feet}</p>\r\n                    <p>Meters:{rocket.height.meters}</p>\r\n                    <br/>\r\n                    <p>RocketMass: </p>\r\n                    <p>Kg:{rocket.mass.kg}</p>\r\n                    <p>Lb:{rocket.mass.lb}</p>\r\n                    <br/>\r\n                    {rocket.payload_weights.map(payload => (\r\n                        <div>\r\n                            <p>PayloadName: {payload.name}</p>\r\n                            <p>PayloadWeight: </p>\r\n                            <p>Kg:{payload.kg}</p>\r\n                            <p>Lb:{payload.lb}</p>\r\n                        </div>\r\n                    ))}\r\n                    <br/>\r\n                    <p>FirstStageEngines: {rocket.first_stage.engines}</p>\r\n                    <p>FirstStageBurnTime: {rocket.first_stage.burn_time_sec}sec</p>\r\n                    <p>FirstStageThrustVacuum: </p>\r\n                    <p>Kn:{rocket.first_stage.thrust_vacuum.kN}</p>\r\n                    <p>Lbf:{rocket.first_stage.thrust_vacuum.lbf}</p>\r\n                    <p>FirstStageThrustSeaLevel: </p>\r\n                    <p>Kn:{rocket.first_stage.thrust_sea_level.kN}</p>\r\n                    <p>Lbf:{rocket.first_stage.thrust_sea_level.lbf}</p>\r\n                    <br/>\r\n                    <p>SecondStageEngines: {rocket.second_stage.engines}</p>\r\n                    <p>SecondStageBurnTime: {rocket.second_stage.burn_time_sec}sec</p>\r\n                    <p>SecondStageThrust: </p>\r\n                    <p>Kn:{rocket.second_stage.thrust.kN}</p>\r\n                    <p>Lbf:{rocket.second_stage.thrust.lbf}</p>\r\n\r\n                    <br />\r\n                    {rocketHistory.map(history => (\r\n                        <div>\r\n                            <p>HistoryTitle: {history.title}</p>\r\n                            <p>HistoryDetails: {history.details}</p>\r\n                            <p>HistoryDate: {history.event_date_utc}</p>\r\n                        </div>\r\n                    ))}\r\n\r\n                </Layout>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Rocket"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AASA;AACA;AACA;AACA;AACA;AAEA;AADA;AAiEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAKA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AALA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJA;AAYA;AACA;AACA;;;;A","sourceRoot":""}