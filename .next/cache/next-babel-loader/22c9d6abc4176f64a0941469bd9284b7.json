{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\ethan\\\\Desktop\\\\SpaceX_Test\\\\pages\\\\rocket\\\\[id].js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n                        query GET_ROCKET {\\n                            rocket(id: \\\"\", \"\\\") {\\n                                name\\n                                country\\n                                description\\n                            }\\n                        }\\n                    \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useEffect, useState } from 'react';\nimport { useRouter } from 'next/router';\nimport gql from \"graphql-tag\";\nimport Layout, { client } from '../../components/Layout';\nimport Loader from '../../components/Loader';\n\nvar Rocket = function Rocket() {\n  var _useState = useState({}),\n      rocket = _useState[0],\n      setRocket = _useState[1];\n\n  var _useState2 = useState(true),\n      isLoading = _useState2[0],\n      setIsLoading = _useState2[1]; // https://github.com/zeit/next.js/issues/8259\n\n\n  var _useState3 = useState(null),\n      id = _useState3[0],\n      setId = _useState3[1];\n\n  var _useRouter = useRouter(),\n      query = _useRouter.query;\n\n  useEffect(function () {\n    setId(query.id);\n\n    if (id) {\n      client.query({\n        query: gql(_templateObject(), id)\n      }).then(function (result) {\n        console.log(result);\n        setRocket(result.data.rocket);\n        setIsLoading(false);\n      });\n    }\n  }, [query, id]);\n  return __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, isLoading ? __jsx(Loader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 26\n    }\n  }) : __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }, __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }\n  }, \"RocketName: \", rocket.name), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 21\n    }\n  }, \"RocketCountry: \", rocket.country), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }\n  }, \"RocketDescription: \", rocket.description)));\n};\n\nexport default Rocket;","map":{"version":3,"sources":["C:/Users/ethan/Desktop/SpaceX_Test/pages/rocket/[id].js"],"names":["useEffect","useState","useRouter","gql","Layout","client","Loader","Rocket","rocket","setRocket","isLoading","setIsLoading","id","setId","query","then","result","console","log","data","name","country","description"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAEA,OAAOC,MAAP,IAAiBC,MAAjB,QAA+B,yBAA/B;AACA,OAAOC,MAAP,MAAmB,yBAAnB;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,GAAM;AAAA,kBAEWN,QAAQ,CAAC,EAAD,CAFnB;AAAA,MAEVO,MAFU;AAAA,MAEFC,SAFE;;AAAA,mBAGiBR,QAAQ,CAAC,IAAD,CAHzB;AAAA,MAGVS,SAHU;AAAA,MAGCC,YAHD,kBAKjB;;;AALiB,mBAMGV,QAAQ,CAAC,IAAD,CANX;AAAA,MAMVW,EANU;AAAA,MAMNC,KANM;;AAAA,mBAOCX,SAAS,EAPV;AAAA,MAOTY,KAPS,cAOTA,KAPS;;AASjBd,EAAAA,SAAS,CAAC,YAAM;AACZa,IAAAA,KAAK,CAACC,KAAK,CAACF,EAAP,CAAL;;AAEA,QAAIA,EAAJ,EAAQ;AACJP,MAAAA,MAAM,CACDS,KADL,CACW;AACHA,QAAAA,KAAK,EAAEX,GAAF,oBAEiBS,EAFjB;AADF,OADX,EAYKG,IAZL,CAYU,UAAAC,MAAM,EAAI;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACAP,QAAAA,SAAS,CAACO,MAAM,CAACG,IAAP,CAAYX,MAAb,CAAT;AACAG,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,OAhBL;AAiBH;AACJ,GAtBQ,EAsBN,CAACG,KAAD,EAAQF,EAAR,CAtBM,CAAT;AAwBA,SACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKF,SAAS,GAAG,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GACN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAgBF,MAAM,CAACY,IAAvB,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAmBZ,MAAM,CAACa,OAA1B,CAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAuBb,MAAM,CAACc,WAA9B,CAHJ,CAFR,CADJ;AAWH,CA5CD;;AA8CA,eAAef,MAAf","sourcesContent":["import { useEffect, useState } from 'react';\r\nimport { useRouter } from 'next/router'\r\nimport gql from \"graphql-tag\";\r\n\r\nimport Layout, { client } from '../../components/Layout';\r\nimport Loader from '../../components/Loader';\r\n\r\nconst Rocket = () => {\r\n\r\n    const [rocket, setRocket] = useState({})\r\n    const [isLoading, setIsLoading] = useState(true)\r\n\r\n    // https://github.com/zeit/next.js/issues/8259\r\n    const [id, setId] = useState(null)\r\n    const { query } = useRouter()\r\n\r\n    useEffect(() => {\r\n        setId(query.id)\r\n\r\n        if (id) {\r\n            client\r\n                .query({\r\n                    query: gql`\r\n                        query GET_ROCKET {\r\n                            rocket(id: \"${id}\") {\r\n                                name\r\n                                country\r\n                                description\r\n                            }\r\n                        }\r\n                    `\r\n                })\r\n                .then(result => {\r\n                    console.log(result)\r\n                    setRocket(result.data.rocket)\r\n                    setIsLoading(false)\r\n                });\r\n        }\r\n    }, [query, id])\r\n\r\n    return (\r\n        <Layout>\r\n            {isLoading ? <Loader /> :\r\n                <div>\r\n                    <p>RocketName: {rocket.name}</p>\r\n                    <p>RocketCountry: {rocket.country}</p>\r\n                    <p>RocketDescription: {rocket.description}</p>\r\n                </div>\r\n            }\r\n        </Layout>\r\n    );\r\n}\r\n\r\nexport default Rocket"]},"metadata":{},"sourceType":"module"}