{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\ethan\\\\Desktop\\\\SpaceX_Test\\\\pages\\\\rocket\\\\[id].js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n                    query GET_ROCKET {\\n                        rocket(id: \", \") {\\n                          name\\n                        }\\n                      }\\n                      \\n                \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport { useQuery } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\nimport { client } from '..';\n\nvar Rocket = function Rocket() {\n  var router = useRouter();\n  var id = router.query.id;\n  useEffect(function () {\n    client.query({\n      query: gql(_templateObject(), id)\n    }).then(function (result) {\n      return console.log(result);\n    });\n  }, []); // const { data, loading, error } = useQuery(GET_ROCKET);\n  // if (loading) return <p>loading</p>;\n  // if (error) return <p>SOMETHING ERROR</p>;\n  // if (!data) return <p>Not found</p>;\n  // console.log(data);\n\n  return __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 12\n    }\n  }, \"Rocket: \", id);\n};\n\nexport default Rocket;","map":{"version":3,"sources":["C:/Users/ethan/Desktop/SpaceX_Test/pages/rocket/[id].js"],"names":["useEffect","useRouter","useQuery","gql","client","Rocket","router","id","query","then","result","console","log"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,MAAT,QAAuB,IAAvB;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,GAAM;AAGjB,MAAMC,MAAM,GAAGL,SAAS,EAAxB;AAHiB,MAITM,EAJS,GAIFD,MAAM,CAACE,KAJL,CAITD,EAJS;AAMjBP,EAAAA,SAAS,CAAC,YAAM;AACZI,IAAAA,MAAM,CACDI,KADL,CACW;AACHA,MAAAA,KAAK,EAAEL,GAAF,oBAEgBI,EAFhB;AADF,KADX,EAWKE,IAXL,CAWU,UAAAC,MAAM;AAAA,aAAIC,OAAO,CAACC,GAAR,CAAYF,MAAZ,CAAJ;AAAA,KAXhB;AAYH,GAbQ,EAaP,EAbO,CAAT,CANiB,CAsBjB;AAEA;AACA;AACA;AAEA;;AAEA,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAYH,EAAZ,CAAP;AACH,CA/BD;;AAiCA,eAAeF,MAAf","sourcesContent":["import { useEffect } from 'react';\r\nimport { useRouter } from 'next/router'\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport gql from \"graphql-tag\";\r\nimport { client } from '..';\r\n\r\nconst Rocket = () => {\r\n\r\n\r\n    const router = useRouter()\r\n    const { id } = router.query\r\n\r\n    useEffect(() => {\r\n        client\r\n            .query({\r\n                query: gql`\r\n                    query GET_ROCKET {\r\n                        rocket(id: ${id}) {\r\n                          name\r\n                        }\r\n                      }\r\n                      \r\n                `\r\n            })\r\n            .then(result => console.log(result));\r\n    },[])\r\n\r\n\r\n    // const { data, loading, error } = useQuery(GET_ROCKET);\r\n\r\n    // if (loading) return <p>loading</p>;\r\n    // if (error) return <p>SOMETHING ERROR</p>;\r\n    // if (!data) return <p>Not found</p>;\r\n\r\n    // console.log(data);\r\n\r\n    return <p>Rocket: {id}</p>\r\n}\r\n\r\nexport default Rocket"]},"metadata":{},"sourceType":"module"}