{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ethan\\\\Desktop\\\\SpaceX_Test\\\\pages\\\\histories\\\\[id].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect, useState } from 'react';\nimport { useRouter } from 'next/router';\nimport gql from \"graphql-tag\";\nimport Head from 'next/head';\nimport Link from 'next/link';\nimport Layout, { client } from '../../components/Layout';\nimport Loader from '../../components/Loader';\n\nconst history = () => {\n  const {\n    0: histories,\n    1: setHistories\n  } = useState([]);\n  const {\n    0: rocket,\n    1: setRocket\n  } = useState();\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState(true);\n  const {\n    0: id,\n    1: setId\n  } = useState(null);\n  const {\n    query\n  } = useRouter();\n  useEffect(() => {\n    setId(query.id);\n\n    if (id) {\n      client.query({\n        query: gql`\n                        query GET_HISTORY {\n                            histories {\n                                title\n                                event_date_utc\n                                details\n                                flight {\n                                    rocket {\n                                        rocket {\n                                            id\n                                            name\n                                        }\n                                    }\n                                }\n                            }  \n                            rocket(id: \"${id}\") {\n                                name\n                            }\n                        }\n                    `\n      }).then(result => {\n        console.log(result);\n        setIsLoading(false);\n        setHistories(result.data.histories);\n        setRocket(result.data.rocket);\n      });\n    }\n  }, [query, id]); // console.log(id)\n  // console.log(histories)\n\n  console.log(rocket); // Filter out histories don't have flight\n\n  const filterHistory = histories.filter(history => {\n    return history.flight;\n  }); // console.log(filterHistory)\n  // Filter out id not same with this page\n\n  const rocketHistory = filterHistory.filter(history => {\n    return history.flight.rocket.rocket.id == `${id}`;\n  }); // console.log(rocketHistory)\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, isLoading ? __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 19\n    }\n  }, __jsx(\"div\", {\n    style: {\n      backgroundColor: 'black',\n      height: '92vh'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 21\n    }\n  }, __jsx(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 25\n    }\n  }))) : __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }\n  }, __jsx(\"section\", {\n    class: \"section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 21\n    }\n  }, __jsx(\"div\", {\n    class: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 25\n    }\n  }, __jsx(\"h1\", {\n    class: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 29\n    }\n  }, name), rocketHistory.map(history => __jsx(\"article\", {\n    class: \"message is-dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 33\n    }\n  }, __jsx(\"div\", {\n    class: \"message-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 37\n    }\n  }, __jsx(\"h1\", {\n    class: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 41\n    }\n  }, history.title), __jsx(\"h2\", {\n    class: \"subtitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 41\n    }\n  }, history.event_date_utc), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 41\n    }\n  }, history.details))))))));\n};\n\nexport default history;","map":{"version":3,"sources":["C:/Users/ethan/Desktop/SpaceX_Test/pages/histories/[id].js"],"names":["useEffect","useState","useRouter","gql","Head","Link","Layout","client","Loader","history","histories","setHistories","rocket","setRocket","isLoading","setIsLoading","id","setId","query","then","result","console","log","data","filterHistory","filter","flight","rocketHistory","backgroundColor","height","name","map","title","event_date_utc","details"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react';\r\nimport { useRouter } from 'next/router'\r\nimport gql from \"graphql-tag\";\r\nimport Head from 'next/head';\r\nimport Link from 'next/link';\r\n\r\nimport Layout, { client } from '../../components/Layout';\r\nimport Loader from '../../components/Loader';\r\n\r\nconst history = () => {\r\n\r\n    const [histories, setHistories] = useState([])\r\n    const [rocket, setRocket] = useState()\r\n    const [isLoading, setIsLoading] = useState(true)\r\n\r\n    const [id, setId] = useState(null)\r\n    const { query } = useRouter()\r\n\r\n    useEffect(() => {\r\n        setId(query.id)\r\n        if (id) {\r\n            client\r\n                .query({\r\n                    query: gql`\r\n                        query GET_HISTORY {\r\n                            histories {\r\n                                title\r\n                                event_date_utc\r\n                                details\r\n                                flight {\r\n                                    rocket {\r\n                                        rocket {\r\n                                            id\r\n                                            name\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }  \r\n                            rocket(id: \"${id}\") {\r\n                                name\r\n                            }\r\n                        }\r\n                    `\r\n                })\r\n                .then(result => {\r\n                    console.log(result)\r\n                    setIsLoading(false)\r\n                    setHistories(result.data.histories)\r\n                    setRocket(result.data.rocket)\r\n                });\r\n        }\r\n    }, [query, id])\r\n    // console.log(id)\r\n    // console.log(histories)\r\n    console.log(rocket)\r\n\r\n    // Filter out histories don't have flight\r\n    const filterHistory = histories.filter(history => {\r\n        return (history.flight)\r\n    });\r\n    // console.log(filterHistory)\r\n\r\n    // Filter out id not same with this page\r\n    const rocketHistory = filterHistory.filter(history => {\r\n        return (history.flight.rocket.rocket.id == `${id}`)\r\n    });\r\n    // console.log(rocketHistory)\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            {isLoading\r\n                ? <Layout>\r\n                    <div style={{ backgroundColor: 'black', height: '92vh' }}>\r\n                        <Loader />\r\n                    </div>\r\n                </Layout>\r\n                :\r\n                <Layout>\r\n                    <section class=\"section\">\r\n                        <div class=\"container\">\r\n                            <h1 class=\"title\">{name}</h1>\r\n                            {rocketHistory.map(history => (\r\n                                <article class=\"message is-dark\">\r\n                                    <div class=\"message-body\">\r\n                                        <h1 class=\"title\">{history.title}</h1>\r\n                                        <h2 class=\"subtitle\">{history.event_date_utc}</h2>\r\n                                        <p>{history.details}</p>\r\n                                    </div>\r\n                                </article>\r\n                            ))}\r\n                        </div>\r\n                    </section>\r\n                </Layout>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default history"]},"metadata":{},"sourceType":"module"}