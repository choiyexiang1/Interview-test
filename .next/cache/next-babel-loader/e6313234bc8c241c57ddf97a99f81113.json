{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\ethan\\\\Desktop\\\\SpaceX_Test\\\\pages\\\\rocket\\\\[id].js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n      query GetLaunch {\\n        rocket(id: \\\"\", \"\\\") {\\n          name\\n        }\\n      }\\n      \\n    \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useRouter } from 'next/router';\nimport { useQuery } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\n\nvar Rocket = function Rocket() {\n  var router = useRouter();\n  var id = router.query.id;\n  var GET_ROCKET = gql(_templateObject(), id);\n\n  var _useQuery = useQuery(GET_ROCKET),\n      data = _useQuery.data,\n      loading = _useQuery.loading,\n      error = _useQuery.error;\n\n  if (loading) return __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 25\n    }\n  }, \"loading\");\n  if (error) return __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 23\n    }\n  }, \"SOMETHING ERROR\");\n  if (!data) return __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 23\n    }\n  }, \"Not found\");\n  console.log(data);\n  return __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 12\n    }\n  }, \"Rocket: \", id);\n};\n\nexport default Rocket;","map":{"version":3,"sources":["C:/Users/ethan/Desktop/SpaceX_Test/pages/rocket/[id].js"],"names":["useRouter","useQuery","gql","Rocket","router","id","query","GET_ROCKET","data","loading","error","console","log"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,GAAM;AACjB,MAAMC,MAAM,GAAGJ,SAAS,EAAxB;AADiB,MAETK,EAFS,GAEFD,MAAM,CAACE,KAFL,CAETD,EAFS;AAIjB,MAAME,UAAU,GAAGL,GAAH,oBAEEG,EAFF,CAAhB;;AAJiB,kBAagBJ,QAAQ,CAACM,UAAD,CAbxB;AAAA,MAaTC,IAbS,aAaTA,IAbS;AAAA,MAaHC,OAbG,aAaHA,OAbG;AAAA,MAaMC,KAbN,aAaMA,KAbN;;AAejB,MAAID,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAP;AACb,MAAIC,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAP;AACX,MAAI,CAACF,IAAL,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAP;AAEXG,EAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AAEA,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAYH,EAAZ,CAAP;AACH,CAtBD;;AAwBA,eAAeF,MAAf","sourcesContent":["import { useRouter } from 'next/router'\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport gql from \"graphql-tag\";\r\n\r\nconst Rocket = () => {\r\n    const router = useRouter()\r\n    const { id } = router.query\r\n    \r\n    const GET_ROCKET = gql`\r\n      query GetLaunch {\r\n        rocket(id: \"${id}\") {\r\n          name\r\n        }\r\n      }\r\n      \r\n    `;\r\n    \r\n    const { data, loading, error } = useQuery(GET_ROCKET);\r\n\r\n    if (loading) return <p>loading</p>;\r\n    if (error) return <p>SOMETHING ERROR</p>;\r\n    if (!data) return <p>Not found</p>;\r\n  \r\n    console.log(data);\r\n\r\n    return <p>Rocket: {id}</p>\r\n}\r\n\r\nexport default Rocket"]},"metadata":{},"sourceType":"module"}